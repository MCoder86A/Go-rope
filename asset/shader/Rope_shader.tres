[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeTextureUniform" id=5]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=7]
default_input_values = [ 0, 0.0, 1, 0.5, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=9]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "ScalarUniform2"

[resource]
code = "shader_type canvas_item;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	float n_out3p0 = TIME;

// Input:12
	vec3 n_out12p0 = vec3(UV, 0.0);

// VectorDecompose:13
	float n_out13p0 = n_out12p0.x;
	float n_out13p1 = n_out12p0.y;
	float n_out13p2 = n_out12p0.z;

// ScalarOp:11
	float n_out11p0 = n_out3p0 + n_out13p0;

// ScalarOp:10
	float n_in10p1 = 0.00000;
	float n_out10p0 = n_out13p1 + n_in10p1;

// VectorCompose:6
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_out11p0, n_out10p0, n_in6p2);

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(TextureUniform, n_out6p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -966.667, -174.667 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 440, 60 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( 280, 0 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -740, 40 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( -20, 60 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -660, 100 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( -400, -60 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -380, 180 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -200, 100 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -200, -20 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -740, -40 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -600, -40 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 7, 0, 10, 0, 6, 1, 11, 0, 6, 0, 2, 1, 0, 1, 6, 0, 2, 0, 12, 0, 13, 0, 13, 0, 11, 1, 13, 1, 10, 0, 3, 0, 11, 0 )
